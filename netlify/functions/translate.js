exports.handler = async function (event) {
    console.log("üì© –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:", event.body);

    const API_KEY = process.env.DEEPL_API;

    if (!event.body) {
        console.error("üö® –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–ø—Ä–æ—Å–µ!");
        return {
            statusCode: 400,
            body: JSON.stringify({ error: "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–ø—Ä–æ—Å–µ" })
        };
    }

    let parsedBody;
    try {
        parsedBody = JSON.parse(event.body);
    } catch (error) {
        console.error("üö® –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:", error);
        return {
            statusCode: 400,
            body: JSON.stringify({ error: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON" })
        };
    }

    const { text, targetLang } = parsedBody;

    if (!text || !targetLang) {
        console.error("üö® –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã text –∏–ª–∏ targetLang");
        return {
            statusCode: 400,
            body: JSON.stringify({ error: "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã text –∏–ª–∏ targetLang" })
        };
    }

    const url = "https://api-free.deepl.com/v2/translate";
    const params = new URLSearchParams();
    params.append("auth_key", API_KEY);
    params.append("text", text);
    params.append("target_lang", targetLang.toUpperCase());

    try {
        console.log("üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ DeepL:", { text, targetLang });
        const response = await fetch(url, {
            method: "POST",
            body: params
        });

        const data = await response.json();
        console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç DeepL:", data);

        return {
            statusCode: 200,
            body: JSON.stringify(data)
        };
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ DeepL:", error);
        return {
            statusCode: 500,
            body: JSON.stringify({ error: "–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ DeepL" })
        };
    }
};
